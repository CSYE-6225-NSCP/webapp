name: Packer Build & ASG Instance Refresh

on:
  push:
    branches:
      - main

env:
  DEPLOY_ENVIRONMENT: ${{ secrets.DEPLOY_ENVIRONMENT }}

jobs:
  build:
    name: Checkout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  packer-build:
    name: Build AMIs with Packer
    needs: build
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENVIRONMENT: ${{ env.DEPLOY_ENVIRONMENT }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      INSTANCE_TYPE: ${{ secrets.INSTANCE_TYPE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_DIALECT: ${{ secrets.DB_DIALECT }}
      DB_LOGGING: ${{ secrets.DB_LOGGING }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
    steps:
      - uses: actions/checkout@v3

      # 1) Configure AWS credentials based on environment
      - name: Configure AWS Credentials for Dev
        if: env.DEPLOY_ENVIRONMENT == 'dev'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region:            ${{ secrets.AWS_REGION_DEV }}

      - name: Configure AWS Credentials for Demo
        if: env.DEPLOY_ENVIRONMENT == 'demo'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}
          aws-region:            ${{ secrets.AWS_REGION_DEMO }}

      # 2) Install & run Packer
      - name: Install Packer
        uses: hashicorp/setup-packer@main

      - name: Package webapp
        run: zip -r webapp.zip .
        shell: bash

      - name: Prepare Packer files
        run: |
          mkdir -p AMI/files
          mv webapp.zip AMI/files/

      - name: Packer init & validate
        working-directory: AMI
        run: |
          packer init csye-packer.pkr.hcl
          packer validate csye-packer.pkr.hcl

      - name: Build AWS & GCP images
        working-directory: AMI
        run: packer build csye-packer.pkr.hcl

  build-ami:
    name: Share AMI & Upload ID
    needs: packer-build
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENVIRONMENT:   ${{ env.DEPLOY_ENVIRONMENT }}
      DEMO_ACCOUNT_ID:      ${{ secrets.AWS_DEMO_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v3

      # Re-configure AWS creds (same pattern as above)
      - name: Configure AWS Credentials for Dev
        if: env.DEPLOY_ENVIRONMENT == 'dev'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region:            ${{ secrets.AWS_REGION_DEV }}

      - name: Configure AWS Credentials for Demo
        if: env.DEPLOY_ENVIRONMENT == 'demo'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}
          aws-region:            ${{ secrets.AWS_REGION_DEMO }}

      - name: Share the AMI and Save AMI_ID
        id: share_ami
        run: |
          AMI_ID=$(aws ec2 describe-images \
            --owners self \
            --filters "Name=state,Values=available" \
            --query "Images | sort_by(@, &CreationDate)[-1].ImageId" \
            --output text)
          if [ -z "$AMI_ID" ]; then
            echo "AMI not found, exiting."
            exit 1
          fi
          echo "Found AMI_ID=$AMI_ID"
          echo "Sharing with account $DEMO_ACCOUNT_IDâ€¦"
          aws ec2 modify-image-attribute \
            --image-id "$AMI_ID" \
            --launch-permission "{\"Add\": [{\"UserId\": \"$DEMO_ACCOUNT_ID\"}]}"
          echo "::set-output name=ami_id::$AMI_ID"
          echo "$AMI_ID" > ami_id.txt

      - name: Upload AMI_ID Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ami_id
          path: ami_id.txt